version: '3'
services:
  users-service:
    build: users-service
    environment:
      JWT_SECRET: o7XhS3kRpD9qFvN1bZcY8wA5mE2jL6tG0iU4xW7zQ8eP3yV1oB2nH6gJ9dK5sT
      JWT_EXPIRATION: 86400000
      SPRING_DATASOURCE_URL: jdbc:postgresql://jeroka_db:5432/jeroka_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: jeroka
      SPRING_MAIN_ALLOW-BEAN-DEFINITION-OVERRIDING: "true"
      SPRING_APPLICATION_NAME: users-service
    depends_on:
      jeroka_db:
        condition: service_started
    ports:
      - "8081:8080"
      - "5005:5005"
    networks:
      - backend
    healthcheck:
      test: ["CMD", "nc", "-z", "users-service", "8080"]
      interval: 10s
      timeout: 5s
      retries: 5
  products-service:
    build: ./products-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://jeroka_db:5432/jeroka_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: jeroka
      SPRING_APPLICATION_NAME: products-service
    ports:
      - "8082:8080"
    networks:
      - backend
    depends_on:
      jeroka_db:
        condition: service_started
    healthcheck:
      test: ["CMD", "nc", "-z", "products-service", "8080"]
      interval: 10s
      timeout: 5s
      retries: 5
  auth-service:
    build: auth-service
    environment:
      JWT_SECRET: o7XhS3kRpD9qFvN1bZcY8wA5mE2jL6tG0iU4xW7zQ8eP3yV1oB2nH6gJ9dK5sT
      JWT_EXPIRATION: 86400000
      SPRING_MAIN_ALLOW-BEAN-DEFINITION-OVERRIDING: "true"
      SPRING_APPLICATION_NAME: auth-service
      USERS_SERVICE_URL: http://users-service:8080
    ports:
      - "8083:8080"
    networks:
      - backend
      - frontend
    depends_on:
      users-service:
        condition: service_started
    healthcheck:
      test: ["CMD", "nc", "-z", "auth-service", "8080"]
      interval: 10s
      timeout: 5s
      retries: 5
  api-gateway:
    build: api-gateway
    ports:
      - "8084:8080"
      - "5006:5005"
    environment:
      SPRING_APPLICATION_NAME: api-gateway
    networks:
      - backend
      - frontend
    depends_on:
      users-service:
        condition: service_started
      auth-service:
        condition: service_started
    healthcheck:
      test: ["CMD", "nc", "-z", "api-gateway", "8080"]
      interval: 10s
      timeout: 5s
      retries: 5
  frontend:
    build: ./frontend
    ports:
      - "8090:80"
    networks:
      - frontend
  jeroka_db:
    image: postgres:15-alpine
    volumes:
      - ./init:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: jeroka
      POSTGRES_DB: jeroka_db
    ports:
      - "5432:5432"
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  nginx:
    image: nginx:1.25-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      api-gateway:
        condition: service_healthy
    networks:
      - backend
      - frontend
networks:
  backend:
    driver: bridge
  frontend: