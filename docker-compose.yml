version: '3.9'

services:
  jeroka_db:
    image: postgres:15-alpine
    container_name: jeroka_db
    volumes:
      - ./init:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: jeroka
      POSTGRES_DB: jeroka_db
    ports:
      - "5432:5432"
    networks:
      - backend

  auth-service:
    build: ./auth-service
    container_name: auth-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://jeroka_db:5432/jeroka_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: jeroka
      JWT_SECRET: o7XhS3kRpD9qFvN1bZcY8wA5mE2jL6tG0iU4xW7zQ8eP3yV1oB2nH6gJ9dK5sT
      JWT_EXPIRATION: 86400000
      SERVER_PORT: 8081
    depends_on:
      - jeroka_db
    ports:
      - "8081:8081"
    networks:
      - backend

  subscription-service:
    ports:
      - "8084:8084"
    build: ./subscription-service
    container_name: subscription-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://jeroka_db:5432/jeroka_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: jeroka
      JWT_SECRET: o7XhS3kRpD9qFvN1bZcY8wA5mE2jL6tG0iU4xW7zQ8eP3yV1oB2nH6gJ9dK5sT
      SERVER_PORT: 8084
    depends_on:
      - jeroka_db
    networks:
      - backend

  album-service:
    ports:
      - "8083:8083"
    build: ./album-service
    container_name: album-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://jeroka_db:5432/jeroka_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: jeroka
      JWT_SECRET: o7XhS3kRpD9qFvN1bZcY8wA5mE2jL6tG0iU4xW7zQ8eP3yV1oB2nH6gJ9dK5sT
      SERVER_PORT: 8083
    depends_on:
      - jeroka_db
    networks:
      - backend

  api-gateway:
    ports:
      - "8082:8082"
    build: ./api-gateway
    container_name: api-gateway
    environment:
      JWT_SECRET: o7XhS3kRpD9qFvN1bZcY8wA5mE2jL6tG0iU4xW7zQ8eP3yV1oB2nH6gJ9dK5sT
      SERVER_PORT: 8082
      # Configuration CORS
      SPRING_CLOUD_GATEWAY_GLOBALCORS_CORSCONFIGURATIONS_[/**]_ALLOWEDORIGINS: "*"
      SPRING_CLOUD_GATEWAY_GLOBALCORS_CORSCONFIGURATIONS_[/**]_ALLOWEDMETHODS: "GET,POST,PUT,DELETE,PATCH,OPTIONS"
      SPRING_CLOUD_GATEWAY_GLOBALCORS_CORSCONFIGURATIONS_[/**]_ALLOWEDHEADERS: "*"
      SPRING_CLOUD_GATEWAY_GLOBALCORS_CORSCONFIGURATIONS_[/**]_ALLOWCREDENTIALS: "true"
      SPRING_CLOUD_GATEWAY_GLOBALCORS_CORSCONFIGURATIONS_[/**]_MAXAGE: "3600"
      # Configuration des timeouts
      SPRING_CLOUD_GATEWAY_HTTPCLIENT_CONNECT-TIMEOUT: "5000"
      SPRING_CLOUD_GATEWAY_HTTPCLIENT_RESPONSE-TIMEOUT: "5000ms"
    depends_on:
      - auth-service
      - album-service
      - subscription-service
    networks:
      - backend
  
  nginx:
    image: nginx:alpine
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    depends_on:
      - api-gateway
    networks:
      - backend

networks:
  backend:
    driver: bridge